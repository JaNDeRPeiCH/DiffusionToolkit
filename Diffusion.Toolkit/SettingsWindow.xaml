<local:BorderlessWindow x:Class="Diffusion.Toolkit.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Diffusion.Toolkit"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        xmlns:localization="clr-namespace:Diffusion.Toolkit.Localization"
        lex:LocalizeDictionary.Provider="{StaticResource LocalizationProvider}"
        lex:LocalizeDictionary.Separation="."
        lex:LocalizeDictionary.DefaultProvider="{StaticResource LocalizationProvider}"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance local:SettingsModel, IsDesignTimeCreatable = True}"
        WindowStartupLocation="CenterOwner"
        ShowInTaskbar="False"
        MenuWidth="0"
        TitleWidth="*"
        WindowStyle="ToolWindow"
        Style="{StaticResource BorderlessWindowStyle}"
        ResizeMode="NoResize"
        Title="{lex:Loc Settings}" Height="600" Width="600">
    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="{Binding Escape}"></KeyBinding>
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>
        <Grid Margin="20">
            <TabControl x:Name="TabControl" Padding="10" Background="{DynamicResource PrimaryBrush}">
                <TabControl.Resources>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}">
                                    <Grid>
                                        <Border Name="Border" Background="{DynamicResource PrimaryBrush}" Margin="2,2,-8,0" BorderBrush="{DynamicResource SecondaryBrush}" BorderThickness="1,1,1,1" CornerRadius="5,5,0,0">
                                            <ContentPresenter x:Name="ContentSite" ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="15,4,15,4" RecognizesAccessKey="True" TextBlock.Foreground="{DynamicResource ForegroundBrush}"/>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="FontWeight" Value="Bold" />
                                            <Setter Property="Panel.ZIndex" Value="10" />
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SecondaryBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="Border" Property="Background" Value="#FF6E6C67" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Panel.ZIndex" Value="10" />
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SecondaryBrush}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <ContentPresenter Content="{TemplateBinding Content}"/>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                    </Style>
                </TabControl.Resources>
                <TabItem x:Name="TabItem" Header="{lex:Loc Settings.General}">
                    <StackPanel Grid.Row="0">
                        <StackPanel Orientation="Horizontal">
                            <Label VerticalContentAlignment="Center" Content="{lex:Loc Settings.General.DiffusionFolders}"></Label>
                        </StackPanel>
                        <Grid Height="120" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="120"/>
                            </Grid.ColumnDefinitions>
                            <ListBox ItemsSource="{Binding ImagePaths}" SelectedIndex="{Binding SelectedIndex}" Margin="0,0,10,0"></ListBox>
                            <StackPanel Grid.Column="1">
                                <Button Click="AddFolder_OnClick" Margin="0,0,0,10" Height="26" Content="{lex:Loc Settings.General.AddFolder}"></Button>
                                <Button Click="RemoveFolder_OnClick" Margin="0,0,0,10" Height="26" Content="{lex:Loc Settings.General.RemoveFolder}"></Button>
                            </StackPanel>
                        </Grid>
                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                            <CheckBox x:Name="WatchFolders" IsChecked="{Binding WatchFolders}" ToolTip="{lex:Loc Settings.General.WatchFolders.ToolTip}" Content="{lex:Loc Settings.General.WatchFolders}"></CheckBox>
                            <CheckBox IsChecked="{Binding AutoRefresh}" Margin="10,0,0,0" ToolTip="{lex:Loc Settings.General.General.ToolTip}"  Content="{lex:Loc Settings.General.AutoRefresh}"></CheckBox>
                            <CheckBox IsChecked="{Binding RecurseFolders}" Margin="10,0,0,0"  VerticalContentAlignment="Center" ToolTip="{lex:Loc Settings.General.Recursive.ToolTip}" Content="{lex:Loc Settings.General.Recursive}"></CheckBox>
                        </StackPanel>
                        <Label Content="{lex:Loc Settings.General.ExcludedFolders}"></Label>
                        <Grid Height="100">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="120"/>
                            </Grid.ColumnDefinitions>
                            <ListBox ItemsSource="{Binding ExcludePaths}" SelectedIndex="{Binding ExcludedSelectedIndex}" Grid.RowSpan="2" Margin="0,0,10,0"></ListBox>
                            <StackPanel Grid.Column="1">
                                <Button Click="ExcludedAddFolder_OnClick" Margin="0,0,0,10" Height="26" Content="{lex:Loc Settings.General.AddFolder}"></Button>
                                <Button Click="ExcludedRemoveFolder_OnClick" Margin="0,0,0,10" Height="26" Content="{lex:Loc Settings.General.RemoveFolder}"></Button>
                            </StackPanel>

                        </Grid>
                        <Label Content="{lex:Loc Settings.General.FileExtensions}"></Label>
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="120"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Height="26" VerticalContentAlignment="Center" Text="{Binding FileExtensions, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,10,0"></TextBox>
                        </Grid>

                        <CheckBox IsChecked="{Binding CheckForUpdatesOnStartup}" Margin="0,10,0,0" Content="{lex:Loc Settings.General.CheckForUpdatesOnStartup}"></CheckBox>

                        <CheckBox IsChecked="{Binding PortableMode}" Margin="0,10,0,0" Content="{lex:Loc Settings.General.PortableMode}"></CheckBox>
                    </StackPanel>

                </TabItem>
                <TabItem Header="{lex:Loc Settings.Checkpoints}">
                    <StackPanel>
                        <Label Content="{lex:Loc Settings.Checkpoints.ModelRoot}"></Label>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="120"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Height="26" VerticalContentAlignment="Center" Text="{Binding ModelRootPath, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,10,0"></TextBox>
                            <Button Height="26" Grid.Column="1" Click="BrowseModelPath_OnClick" Content="{lex:Loc Common.Buttons.Browse}"></Button>
                        </Grid>
                        <TextBlock Foreground="{DynamicResource ForegroundBrush}" Margin="10" TextWrapping="Wrap" Text="{lex:Loc Settings.Checkpoints.ModelRoot.Description}">
                        </TextBlock>
                        <Label Content="{lex:Loc Settings.Checkpoints.A1111Cache}"></Label>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="120"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Height="26" VerticalContentAlignment="Center" Text="{Binding HashCache, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,10,0"></TextBox>
                            <Button Height="26" Grid.Column="1" Click="BrowseHashCache_OnClick" Content="{lex:Loc Common.Buttons.Browse}"></Button>
                        </Grid>
                        <TextBlock Foreground="{DynamicResource ForegroundBrush}" Margin="10" TextWrapping="Wrap" Text="{lex:Loc Settings.Checkpoints.A1111Cache.Description}">
                        </TextBlock>
                    </StackPanel>
                </TabItem>
                <TabItem Header="{lex:Loc Settings.Images}">
                    <StackPanel HorizontalAlignment="Stretch">
                        <Label Content="{lex:Loc Settings.Images.ThumbnailsPerPage}"></Label>
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="120"/>
                            </Grid.ColumnDefinitions>
                            <Slider x:Name="Slider" Minimum="100" Maximum="1000" Value="{Binding PageSize}" TickFrequency="50" IsSnapToTickEnabled="True" TickPlacement="BottomRight" Orientation="Horizontal" Margin="0,0,10,0"></Slider>
                            <Label Grid.Column="1" Height="26" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Content="{Binding PageSize}" Margin="0,0,10,0"></Label>
                        </Grid>
                        <Label Content="{lex:Loc Settings.Images.OpenImagesUsing}"/>
                        <Grid Margin="0,10,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="140"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <RadioButton GroupName="Viewer" IsChecked="{Binding UseBuiltInViewer}" Content="{lex:Loc Settings.Images.OpenImagesUsing.BuiltInViewer}"></RadioButton>
                            <CheckBox IsEnabled="{Binding UseBuiltInViewer}" Grid.Column="1" IsChecked="{Binding OpenInFullScreen}" Content="{lex:Loc Settings.Images.OpenImagesUsing.BuiltInViewer.OpenInFullscreen}"></CheckBox>
                        </Grid>
                        <RadioButton GroupName="Viewer" IsChecked="{Binding UseSystemDefault}" Margin="0,10,0,0" Content="{lex:Loc Settings.Images.OpenImagesUsing.SystemDefault}"></RadioButton>
                        <Grid Margin="0,10,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="140"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <RadioButton GroupName="Viewer" IsChecked="{Binding UseCustomViewer}" Content="{lex:Loc Settings.Images.OpenImagesUsing.Custom}"></RadioButton>
                            <TextBox IsEnabled="{Binding UseCustomViewer}" Grid.Column="1" Text="{Binding CustomCommandLine}"></TextBox>
                            <Button IsEnabled="{Binding UseCustomViewer}" Grid.Column="2" Click="BrowseCustomViewer_OnClick">...</Button>
                        </Grid>
                        <Grid Margin="0,10,0,0" IsEnabled="{Binding UseCustomViewer}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="140"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{lex:Loc Settings.Images.OpenImagesUsing.Custom.Arguments}"></Label>
                            <TextBox Grid.Column="1" Height="20"  Text="{Binding CustomCommandLineArgs}"></TextBox>
                        </Grid>
                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0" >
                            <Label>Slide show delay (seconds)</Label>
                            <TextBox Text="{Binding SlideShowDelay, UpdateSourceTrigger=PropertyChanged}" Height="20" Width="50"></TextBox>
                        </StackPanel>
                        <CheckBox IsChecked="{Binding AdvanceOnTag}" Margin="0,10,0,0" Content="{lex:Loc Settings.Images.AdvanceOnTag}"></CheckBox>
                        <CheckBox IsChecked="{Binding ScrollNavigation}" Margin="0,10,0,0" Content="{lex:Loc Settings.Images.ScrollNavigation}"></CheckBox>
                        <CheckBox IsChecked="{Binding ScanForNewImagesOnStartup}" Margin="0,10,0,0" Content="{lex:Loc Settings.Images.ScanForNewImagesOnStartup}"></CheckBox>
                    </StackPanel>
                </TabItem>
                <TabItem Header="{lex:Loc Settings.Metadata}">
                    <StackPanel>
                        <CheckBox IsChecked="{Binding StoreMetadata}" Margin="0,10,0,0" Content="{lex:Loc Settings.Metadata.StoreMetadata}"></CheckBox>
                        <CheckBox IsChecked="{Binding StoreWorkflow}" Margin="0,10,0,0" Content="{lex:Loc Settings.Metadata.StoreWorkflow}"></CheckBox>
                        <TextBlock Foreground="{DynamicResource ForegroundBrush}" Margin="0,10,0,0" TextWrapping="Wrap" Text="{lex:Loc Settings.Metadata.Warning}"></TextBlock>
                    </StackPanel>
                </TabItem>
                <TabItem Header="{lex:Loc Settings.NSFW}">
                    <StackPanel>
                        <Label Content="{lex:Loc Settings.NSFW.NSFWTags}"></Label>
                        <TextBox Text="{Binding NSFWTags, UpdateSourceTrigger=PropertyChanged}" VerticalScrollBarVisibility="Auto" AcceptsReturn="True" Margin="0,10,0,10" Height="90"></TextBox>
                        <CheckBox IsChecked="{Binding AutoTagNSFW}" ToolTip="Automatically tag added images as NSFW" Content="{lex:Loc Settings.NSFW.AutoTagNSFW}"></CheckBox>
                    </StackPanel>
                </TabItem>
                <TabItem Header="{lex:Loc Settings.Themes}">
                    <StackPanel>
                        <Label Content="{lex:Loc Settings.Themes.Theme}"></Label>
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="120"/>
                            </Grid.ColumnDefinitions>
                            <ComboBox Height="26" VerticalContentAlignment="Center" 
                                      ItemsSource="{Binding ThemeOptions}"
                                      SelectedValue="{Binding Theme}"
                                      DisplayMemberPath="Name"
                                      SelectedValuePath="Value" Margin="0,0,10,0">
                            </ComboBox>
                        </Grid>

                        <Label Content="{lex:Loc Settings.Themes.Language}"/>
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="120"/>
                            </Grid.ColumnDefinitions>
                            <ComboBox ItemsSource="{Binding Cultures}" DisplayMemberPath="Name" SelectedValuePath="Culture" SelectedValue="{Binding Culture}" Height="26" VerticalContentAlignment="Center"  Margin="0,0,10,0">
                            </ComboBox>
                        </Grid>
                    </StackPanel>
                </TabItem>
                <TabItem Header="{lex:Loc Settings.Database}">
                    <StackPanel>
                        <Button Click="Open_DB_Folder" Width="200" Height="26" Margin="0,0,0,10" Content="{lex:Loc Settings.Database.OpenFolder}"></Button>
                        <Button Click="Backup_DB" Width="200" Height="26" Margin="0,0,0,10" Content="{lex:Loc Settings.Database.Backup}"></Button>
                        <Button Click="Restore_DB" Width="200" Height="26" Content="{lex:Loc Settings.Database.Restore}"></Button>
                    </StackPanel>
                </TabItem>
            </TabControl>

        </Grid>
        <Grid Grid.Row="1" Margin="0,0,0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <Button Width="150" x:Name="Close" Click="Close_OnClick" Content="{lex:Loc Common.Buttons.Close}"></Button>
                <Button Width="150" x:Name="OK" Click="OK_OnClick" Content="{lex:Loc Common.Buttons.Apply}"></Button>
            </StackPanel>
        </Grid>
    </Grid>
</local:BorderlessWindow>
